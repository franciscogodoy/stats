m = cbind(c(1,2,3),c(4,7,13),1)
m
eigen(m)
m = cbind(c(1,2,3),c(1,3,1),1)
eigen(m)
m
data(iris)
iris
mean(iris)
mean(iris[,1:4])
summary(iris)
iris[,1:4] = (iris[,1:4] - mean(iris[,1:4]))/sd(iris[,1:4])
iris
mean(iris[,1:4])
iris
data(iris)
iris
summary(iris)
m = cbind(c(1,2,3),c(1,3,1),1)
eigen(m)
m
ir <- rbind(iris3[,,1],iris3[,,2],iris3[,,3])
iris3
iris3
ir <- rbind(iris3[,,1],iris3[,,2],iris3[,,3])
ir
iris
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
class.ind <- function(cl)
{
n <- length(cl)
cl <- as.factor(cl)
x <- matrix(0, n, length(levels(cl)) )
x[(1:n) + n*(unclass(cl)-1)] <- 1
dimnames(x) <- list(names(cl), levels(cl))
x
}
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
targets
ird <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))))
ird
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
samp
length(samp)
class(iris)
class(iris3)
iris3
ir.nn2 <- nnet(species ~ ., data = ird, subset = samp, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
library(nnet)
ir.nn2 <- nnet(species ~ ., data = ird, subset = samp, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
table(ird$species[-samp], predict(ir.nn2, ird[-samp,], type = "class"))
ir <- rbind(iris3[,,1],iris3[,,2],iris3[,,3])
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ir1 <- nnet(ir[samp,], targets[samp,], size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
test.cl <- function(true, pred) {
true <- max.col(true)
cres <- max.col(pred)
table(true, cres)
}
test.cl(targets[-samp,], predict(ir1, ir[-samp,]))
coef.nnet (ir.nn2)
iris3[,,1]
ird$species[-samp]
ird$species[samp]
ird$species[samp]
ird$species
ird$species[samp]
samp
-samp
ird$species[-samp]
ird$species[samp]
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
samp
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
samp
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
train_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ird <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))))
train_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
test_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ir.nn2 <- nnet(species ~ ., data = ird, subset = train_sample, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
table(ird$species[test_sample], predict(ir.nn2, ird[test_sample,], type = "class"))
ird$species[test_sample]
predict(ir.nn2, ird[test_sample,]
)
ird <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))))
train_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
test_sample  =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ir.nn2 <- nnet(species ~ ., data = ird, subset = train_sample, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
ird$species[~test_sample]
ird$species[train_sample]
ird$species[-train_sample]
ird$species[test_sample]
?sample
train_sample =  c(sample(1:150,150);
train_sample =  c(sample(1:150,150));
train_example
train_sample =  c(sample(1:150,150))
train_example
train_sample
samp  =  c(sample(1:50,50), sample(51:100,50), sample(101:150,50));
data  =  data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))));
train_sample = 1:2:size(data,1);
test_sample  = 2:2:size(data,1);
samp  =  c(sample(1:50,50), sample(51:100,50), sample(101:150,50));
data  =  data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))));
train_sample = 1:2:150;
test_sample  = 2:2:150;
train_example
train_sample
?rep
?seq
train_sample = seq(1,2,150);
train_sample
train_sample = seq(1,150,2);
seq(1,150,2)
seq(2,150,2)
samp  =  c(sample(1:50,50), sample(51:100,50), sample(101:150,50));
data  =  data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))));
train_sample = seq(1,150,2);
test_sample  = seq(2,150,2);
ir.nn <- nnet(species ~ ., data = ird, subset = train_sample, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
table(ird$species[test_sample], predict(ir.nn2, ird[test_sample,], type = "class"))
mydata = read.table('salmon.data');
names(mydata) = c('y','x1', 'x2', 'x3');
mydata$y = mydata$y-1;
fit <- glm(y~x1+x2+x3,data=mydata,family=binomial())
# display fitting coefficients (est thetas) and oher results
summary(fit);
# 95% CI for the coefficients
confint(fit);
# exponentiated coefficients
exp(coef(fit));
# 95% CI for exponentiated coefficients
exp(confint(fit));
# predicted values
y.hat = predict(fit, type="response");
y.hat = y.hat > 0.5;
y.train = mydata$y;
y.train = y.train  > 0.5;
table(y.hat, y.train);
residuals(fit, type="deviance");
fit2 <- glm(y~x2+x3,data=mydata,family=binomial())
anova(fit,fit2, test="Chisq");
fit3 <- glm(y~x3,data=mydata,family=binomial());
anova(fit,fit3, test="Chisq");
cdplot(y~x2, data=mydata)
y
mydata
cdplot(y~x1, data=mydata);
help(glm)
