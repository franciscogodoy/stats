data = read.table('stockprice.data', sep = ",");
data
data = read.table('stockprice.data');
data
names(data) = c('X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'X7');
names(data) = c('X1', 'X2', 'X3', 'X4', 'X5');
data
head(data)
cor(data)
eig(cor(data))
eigen(cor(data))
eigen(cor(data))$values[1]
eigen(cor(data))$values[1:2]
sum(eigen(cor(data))$values[1:2])/sum(eigen(cor(data))$values)
pc.estimate = function(data, p, m) {
cor.r = cor(data);
eigen.pair = eigen(cor.r);
row.names = row.names(cor.r);
col.names = paste(c("F"), 1:m, sep="");
dim.names = list(row.names, col.names);
loadings = matrix(0,p,m, dimnames = dim.names);
for (i in 1:m){
loadings[,i] = sqrt(eigen.pair$values[i]) * eigen.pair$vectors[,i];
}
eigen.values = eigen.pair$values;
eigen.values.proportion = eigen.pair$values / p;
eigen.values.cum.proportion = cumsum(eigen.values.proportion);
eigen.values.matrix = rbind(eigen.values, eigen.values.proportion, eigen.values.cum.proportion);
eigen.row.names = c('Eigenvalues', 'propotion.of.total.variance', 'cummulitive.propotion');
eigen.col.names = paste(c("F"), 1:p, sep="");
dimnames(eigen.values.matrix) = list(eigen.row.names, eigen.col.names);
LLt = loadings %*% t(loadings);
specific.vars.vector = diag(cor.r - LLt);
specific.vars.matrix = matrix(0, p, p);
diag(specific.vars.matrix) = diag(cor.r - LLt);
communalities = apply(loadings^2, 1, sum);
ls = list(est.factor.loadings = round(loadings,3),  
communalities = round(communalities,3), 
specific.variances = round(specific.vars.vector,3), 
specific.variances.matrix = round(specific.vars.matrix,3),
sample.variance.explained = round(eigen.values.matrix[,1:m],3));
ls;
}
pc.estimate(data, 5,2)
save.image("C:\\Users\\td\\git\\mva\\factor\\factor")
