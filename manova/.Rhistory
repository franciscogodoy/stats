m = cbind(c(1,2,3),c(4,7,13),1)
m
eigen(m)
m = cbind(c(1,2,3),c(1,3,1),1)
eigen(m)
m
data(iris)
iris
mean(iris)
mean(iris[,1:4])
summary(iris)
iris[,1:4] = (iris[,1:4] - mean(iris[,1:4]))/sd(iris[,1:4])
iris
mean(iris[,1:4])
iris
data(iris)
iris
summary(iris)
m = cbind(c(1,2,3),c(1,3,1),1)
eigen(m)
m
ir <- rbind(iris3[,,1],iris3[,,2],iris3[,,3])
iris3
iris3
ir <- rbind(iris3[,,1],iris3[,,2],iris3[,,3])
ir
iris
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
class.ind <- function(cl)
{
n <- length(cl)
cl <- as.factor(cl)
x <- matrix(0, n, length(levels(cl)) )
x[(1:n) + n*(unclass(cl)-1)] <- 1
dimnames(x) <- list(names(cl), levels(cl))
x
}
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
targets
ird <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))))
ird
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
samp
length(samp)
class(iris)
class(iris3)
iris3
ir.nn2 <- nnet(species ~ ., data = ird, subset = samp, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
library(nnet)
ir.nn2 <- nnet(species ~ ., data = ird, subset = samp, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
table(ird$species[-samp], predict(ir.nn2, ird[-samp,], type = "class"))
ir <- rbind(iris3[,,1],iris3[,,2],iris3[,,3])
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ir1 <- nnet(ir[samp,], targets[samp,], size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
test.cl <- function(true, pred) {
true <- max.col(true)
cres <- max.col(pred)
table(true, cres)
}
test.cl(targets[-samp,], predict(ir1, ir[-samp,]))
coef.nnet (ir.nn2)
iris3[,,1]
ird$species[-samp]
ird$species[samp]
ird$species[samp]
ird$species
ird$species[samp]
samp
-samp
ird$species[-samp]
ird$species[samp]
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
samp
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
samp
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
train_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ird <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))))
train_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
test_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ir.nn2 <- nnet(species ~ ., data = ird, subset = train_sample, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
table(ird$species[test_sample], predict(ir.nn2, ird[test_sample,], type = "class"))
ird$species[test_sample]
predict(ir.nn2, ird[test_sample,]
)
ird <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))))
train_sample =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
test_sample  =  c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ir.nn2 <- nnet(species ~ ., data = ird, subset = train_sample, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
ird$species[~test_sample]
ird$species[train_sample]
ird$species[-train_sample]
ird$species[test_sample]
?sample
train_sample =  c(sample(1:150,150);
train_sample =  c(sample(1:150,150));
train_example
train_sample =  c(sample(1:150,150))
train_example
train_sample
samp  =  c(sample(1:50,50), sample(51:100,50), sample(101:150,50));
data  =  data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))));
train_sample = 1:2:size(data,1);
test_sample  = 2:2:size(data,1);
samp  =  c(sample(1:50,50), sample(51:100,50), sample(101:150,50));
data  =  data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))));
train_sample = 1:2:150;
test_sample  = 2:2:150;
train_example
train_sample
?rep
?seq
train_sample = seq(1,2,150);
train_sample
train_sample = seq(1,150,2);
seq(1,150,2)
seq(2,150,2)
samp  =  c(sample(1:50,50), sample(51:100,50), sample(101:150,50));
data  =  data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), 
species = factor(c(rep("s",50), rep("c", 50), rep("v", 50))));
train_sample = seq(1,150,2);
test_sample  = seq(2,150,2);
ir.nn <- nnet(species ~ ., data = ird, subset = train_sample, size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
table(ird$species[test_sample], predict(ir.nn2, ird[test_sample,], type = "class"))
attach(red.cell.folate)
install.packages("ISwR")
library('ISwR')
ls
attach(red.cell.folate)
red.cell.folate
by(ventilation)
by(folate, ventilation)
?by
by(folate, ventilation, mean)
by(folate, ventilation, summary)
summary(red.cell.folate)
by(folate, ventilation, summary);
by(folate, ventilation, mean);
names(by(folate, ventilation, mean))
classby(folate, ventilation, mean))
class(by(folate, ventilation, mean))
by(folate, ventilation, mean)[1]
by(folate, ventilation, mean)[2]
by(folate, ventilation, mean)[3]
by(folate, ventilation, mean)*2
by(folate, ventilation, mean)
by(folate, ventilation, mean)%*%c(1,1,1)
by(folate, ventilation, mean)-mean(folate)%*%by(folate, ventilation, sum)
by(folate, ventilation, mean)-mean(folate)%*%t(by(folate, ventilation, sum))
by(folate, ventilation, sum)
by(folate, ventilation, count)
by(folate, ventilation, 1)
by(folate, ventilation, mean)
by(folate, ventilation, mean)%*%c(1,1,1)
by(folate, ventilation, mean) - mean(folate)
(by(folate, ventilation, mean) - mean(folate)) %*%c(8,9,1)
((by(folate, ventilation, mean) - mean(folate))^2) %*%c(8,9,1)
summary(red.cell.folate)
((by(folate, ventilation, mean) - mean(folate))^2) %*%c(8,9,5)
SStr = ((by(folate, ventilation, mean) - mean(folate))^2) %*%c(8,9,5);
SScor = sum((folate - mean(folate))^2)
SSres = SScor - SStr;
SSres
anova(lm(folate~ventilation))
nrows(folate )
nrows(folate)
num.rows(folate)
n.rows(folate)
nrow(folate)
nrow(red.cell.folate)
f.stat = (SStr/(3-1))/(SSres/((nrow(red.cell.folate) - 3));
f.stat = (SStr/(3-1))/(SSres/((nrow(red.cell.folate) - 3)))
f.stat
?rnorm
help.start()
?f
?rf
qf(0.99, 2,5) 
f.quant = qf(0.95, 3-1, nrow(red.cell.folate) - 3);
f.quant 
print(f.stat > f.quant)
if f.stat > f.quant {
print('reject Ho: no treatment effect');
}
if (f.stat > f.quant) {
print('reject Ho: no treatment effect');
}
if (f.stat > f.quant) {
print('reject Ho: no treatment effect');
} else {
print('Would not reeject Ho: no treatment effect');
}
attach(juul);
juul
juul$tanner <- factor(juul$tanner, labels=c("I","II","III","IV","V"));
juul$tanner
detach(juul);
attach(juul);
summary(tanner);
summary(lm(folate~ventilation));
ventilation
pairwise.t.test(folate, ventilation, p.adj="bonferroni");
data = read.table('stockprice.data');
names(data) = c('X1', 'X2', 'X3', 'X4', 'X5');
estimate = factanal(data, factors = m, rotation = "none");
m = 2
estimate = factanal(data, factors = m, rotation = "none");
estimate
summary(estimate)
data
estimate
head(data)
names(estimate)
names(summary)(estimate))
names(summary)(estimate)))
names(summary((estimate)))
summary)(estimate))
summary(estimate)
names(summary(estimate))
summary(estimate)
estimate
mle.estimate = function(data, p, m) {
estimate = factanal(data, factors = m, rotation = "none");
loadml = loadings(estimate);
class(loadml) = "matrix";
uniqueml = estimate$uniquenesses
specific.vars.matrix = matrix(0, p, p);
diag(specific.vars.matrix) = uniqueml;
ls = list(Loadings = round(loadml,3), Uniquenesses=round(uniqueml,3), 
Specific.Variances= round(specific.vars.matrix,3));
ls;
}
mle.estimate(data,5,2)
mle.estimate(data, 5, 2); # 2 factor solution;
print(factanal(data, factors = 2, rotation = "none"));
pairwise.t.test(folate, ventilation, p.adj="bonferroni");
choose(3,2)
anova(folate~ventilation)
anova(lm(folate~ventilation))
pairwise.t.test(folate,ventilation,pool.sd=F)
xbar <- tapply(folate, ventilation, mean)
xbar
folate
ventilation
xbar <- tapply(folate, ventilation, mean)
s <- tapply(folate, ventilation, sd)
n <- tapply(folate, ventilation, length)
sem <- s/sqrt(n)
n
sem <- s/sqrt(n)
sem
stripchart(folate~ventilation, method="jitter", jitter=0.05, pch=16, vert=T)
arrows(1:3,xbar+sem,1:3,xbar-sem,angle=90,code=3,length=.1)
lines(1:3,xbar,pch=4,type="b",cex=2)
bartlett.test(folate~ventilation)
?gl
gl(9,1,36)
gl(9,2,36)
=gl(4,9,36,labels=c(0,30,60,120)))
gl(4,9,36,labels=c(0,30,60,120)))
gl(4,9,36,labels=c(0,30,60,120))
gl(2,10)
